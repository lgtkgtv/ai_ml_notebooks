name: Lockfile guard

on:
  pull_request:
    paths:
      - "pyproject.toml"
      - "uv.lock"
      - ".github/workflows/lockfile.yml"

jobs:
  check-lock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Ensure lockfile exists & is up to date (no changes allowed)
        run: |
          # Fail if uv.lock would change or is missing
          uv lock --check
        # `uv lock --check` == assert lock is current; error if it would change. :contentReference[oaicite:0]{index=0}

      - name: Enforce “pyproject changed ⇒ uv.lock changed”
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          set -eux
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.sha }}"
          CHANGED_FILES="$(git diff --name-only "$BASE_SHA" "$HEAD_SHA")"

          if echo "$CHANGED_FILES" | grep -q '^pyproject\.toml$'; then
            if ! echo "$CHANGED_FILES" | grep -q '^uv\.lock$'; then
              echo "::error ::pyproject.toml changed but uv.lock did not. Run 'uv lock' and commit the result."
              exit 1
            fi
          fi

      - name: Frozen sync sanity (optional)
        run: |
          # Install strictly from lock without updating it
          uv sync --locked
        # `uv sync --locked` avoids re-locking and asserts lock consistency. :contentReference[oaicite:1]{index=1}

